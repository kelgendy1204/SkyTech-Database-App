package root.gui;

import global.Database;
import global.Month;
import global.gui.ErrorMessage;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.PreparedStatement;
import java.sql.SQLException;

import javax.swing.JSpinner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Khaled
 */
public class ClearOperationsDialog extends javax.swing.JDialog {

    /**
	 * 
	 */
	private static final long serialVersionUID = 8002138083547960403L;
	/**
     * Creates new form ClearOperationsDialog
     */
	private RootUserGUIFrame parent;
	private Database database;
	private Month month;
	private int year;
	
    public ClearOperationsDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    
    public ClearOperationsDialog(RootUserGUIFrame parent, Database database) {
    	super(parent, ModalityType.APPLICATION_MODAL);
    	this.parent = parent;
    	this.database = database;
		initComponents();
	}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings({ "unchecked", "rawtypes" })
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        titleLabel = new javax.swing.JLabel();
        clearButton = new javax.swing.JButton();
        monthLabel = new javax.swing.JLabel();
        yearLabel = new javax.swing.JLabel();
        monthComboBox = new javax.swing.JComboBox<Month>();
        yearSpinner = new javax.swing.JSpinner();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Clear operations");
        setResizable(false);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        titleLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        titleLabel.setText("Clear operations before :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(15, 15, 5, 5);
        getContentPane().add(titleLabel, gridBagConstraints);

        clearButton.setText("Clear");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 20, 15, 15);
        getContentPane().add(clearButton, gridBagConstraints);

        monthLabel.setText("Month :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 15, 5, 5);
        getContentPane().add(monthLabel, gridBagConstraints);

        yearLabel.setText("Year :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 20, 5, 5);
        getContentPane().add(yearLabel, gridBagConstraints);

        monthComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(monthComboBox, gridBagConstraints);

        yearSpinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(2015), Integer.valueOf(2015), null, Integer.valueOf(1)));
        yearSpinner.setEditor(new JSpinner.NumberEditor(yearSpinner, "#"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 15);
        getContentPane().add(yearSpinner, gridBagConstraints);
        
        clearButton.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent arg0) {
				year = (int) yearSpinner.getValue();
				month = Month.valueOf((String) monthComboBox.getSelectedItem());
				
				try {
					deleteOperations();
				} catch (SQLException e) {
					ErrorMessage.showErrorMessage(ClearOperationsDialog.this, e.getMessage());
					e.printStackTrace();
				}
				
			}
		});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void deleteOperations() throws SQLException {
    	String disableTriggerSql = ("SET @disable_triggers = 1" );
		PreparedStatement disableTriggersStatement = database.getCon().prepareStatement(disableTriggerSql);
		disableTriggersStatement.executeUpdate();
    	
    	String deleteSql = ("DELETE FROM SkyTech.operations WHERE YEAR(operations.date) <= ? AND MONTH(operations.date) < ? ");
		PreparedStatement deleteStatement = database.getCon().prepareStatement(deleteSql);
		deleteStatement.setInt(1, year);
		deleteStatement.setInt(2, month.ordinal());
		deleteStatement.executeUpdate();
		
		try {
			Thread.sleep(1000);
		} catch (InterruptedException e) {
			ErrorMessage.showErrorMessage(ClearOperationsDialog.this, e.getMessage());
			e.printStackTrace();
		}
		
		String enableTriggerSql = ("SET @disable_triggers = NULL" );
		PreparedStatement enableTriggersStatement = database.getCon().prepareStatement(enableTriggerSql);
		enableTriggersStatement.executeUpdate();
		
		enableTriggersStatement.close();
		disableTriggersStatement.close();
		deleteStatement.close();
		
		
		ClearOperationsDialog.this.dispose();
		java.awt.Toolkit.getDefaultToolkit().beep();
		
		parent.refresh();
	}
    
    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClearOperationsDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClearOperationsDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClearOperationsDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClearOperationsDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ClearOperationsDialog dialog = new ClearOperationsDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clearButton;
    private javax.swing.JSpinner yearSpinner;
    private javax.swing.JComboBox<Month> monthComboBox;
    private javax.swing.JLabel monthLabel;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JLabel yearLabel;
    // End of variables declaration//GEN-END:variables
}
